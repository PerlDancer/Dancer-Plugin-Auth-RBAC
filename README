Dancer-Plugin-Authorize - Dancer Authentication and Role-Based Access Control Framework!

# FRAMEWORK SEPCIFICATION

Dancer::Plugin::Authorize is an authentication framework and role-based access control system.
As a role-based access control system Dancer::Plugin::Authorize give you the ultimate in flexibilty
and scalability.

# BASIC USAGE

use Dancer;
use Dancer::Plugin::Authorize;

post '/login' => sub {

    if (auth(params->{user}, params->{pass})) {
        
        if (auth_asa('guest')) {
            ...
        }
        
        if (auth_can('manage_accounts', 'create')) {
            ...
        }
        
    }

};

# CONFIGURATION SEPCIFICATION

Mainly under the Authorize plugin section in the configuration file you'll have a
keyword which defines all the authentication information needed, this keyword exists
solely to accomidate use-cases where multiple multiple authentication schemes are needed.
e.g. an application may need to authenticate different types of users differents, i.e.
users may need LDAP authentication and customers may need DBIC authentication. etc.

Dancer::Plugin::Authorize then creates the following functions using your keywords:

$keyword = 'foo';

# authentication function
foo()

# check if the authenticated user has the specified role
foo_asa($role)

# check if the authenticated user has permission to perform a specific action
foo_can($permission, $action) 

# CONFIGURATION SEPCIFICATION - Config
# Based on the following credentials/permissions setup
# Dancer::Plugin::Authorize::Credentials::Config
# Dancer::Plugin::Authorize::Permissions::Config

plugins:
  Authorize:
    auth: # keyword allows one to setup multiple authentication schemes
      credentials:
        class: Config
        options:
          accounts:
            user01:
              password: foobar
              roles:
              - guest
              - user
            user02:
              password: barbaz
              roles:
              - admin
      permissions:
        class: Config
        options:
          control:
            admin:
              permissions:
                manage accounts:
                  operations:
                  - view
                  - create
                  - update
                  - delete
            user:
              permissions:
                manage accounts:
                  operations:
                  - view
                  - create
            guests:
              permissions:
                manage accounts:
                  operations:
                  - view
      
# CONFIGURATION SEPCIFICATION - LDAP
# Based on the following credentials/permissions setup
# Dancer::Plugin::Authorize::Credentials::LDAP
# Dancer::Plugin::Authorize::Permissions::Config

plugins:
  Authorize:
    momma: # keyword allows one to setup multiple authentication schemes
      credentials:
        class: LDAP
        options:
          ... # see Dancer::Plugin::Authorize::Credentials::LDAP for valid arguments
      permissions:
        class: Config
        options:
          control:
            admin:
              permissions:
                manage accounts:
                  operations:
                  - view
                  - create
                  - update
                  - delete
            user:
              permissions:
                manage accounts:
                  operations:
                  - view
                  - create
            guests:
              permissions:
                manage accounts:
                  operations:
                  - view


To install this module using code from CPAN,
run the following commands

perl Makefile.PL
make
make test
make install

To install this module using code from the git repository,
run the following commands (Dist::Zilla required):

dzil build
cd Dancer-Plugin-Authorize-#.##
cpan .

REPOSITORY

  http://github.com/alnewkirk/Dancer-Plugin-Authorize/

COPYRIGHT AND LICENCE

Copyright (C) 2010 Al Newkirk

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.